name: Deploy to prod

on:
  push:
    branches: [repro]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      ImageOS: ubuntu22
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0' # Define the elixir version [required]
        otp-version: '25.0.2' # Define the OTP version [required]
        
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
        
    - name: Install dependencies
      run: mix deps.get
      
    - name: Check code formatting
      run: mix format --check-formatted
      if: always()
      
    - name: Run Credo
      run: mix credo --strict
      # Run Credo even if formatting or the unused deps check failed
      if: always()

  publish:
    name: Publish to DockerHub
    runs-on: ubuntu-latest
    env:
      ImageOS: ubuntu22
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
  
      - name: Build image
        uses: docker/build-push-action@v4
        with:
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/vox:${{ github.sha }}
          context: .
          load: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_HUB_USERNAME }}/vox:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          if: false
    
      - name: Build image
        uses: docker/build-push-action@v4
        with:
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/vox:${{ github.sha }}
          context: .
          load: true
          push: true


